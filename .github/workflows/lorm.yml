name: lorm

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup toolchain install stable --profile minimal
      - run: rustup component add rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup toolchain install stable --profile minimal
      - run: rustup component add clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy -- -D warnings

  test:
    name: Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Test lorm
        run: >
          cargo test
          -p lorm

      - name: Test lorm-macros
        run: >
          cargo test
          -p lorm-macros

  examples:
    name: Examples
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Run basic_crud example
        run: cargo run --example basic_crud -p lorm
      - name: Run query_builder example
        run: cargo run --example query_builder -p lorm
      - name: Run transactions example
        run: cargo run --example transactions -p lorm

  coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate coverage and check thresholds
        run: |
          cargo llvm-cov --workspace --lcov --output-path lcov.info \
            --fail-under-lines 80 \
            --fail-under-regions 80 \
            --fail-under-functions 80
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
